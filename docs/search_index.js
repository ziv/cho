(function () {
  window.DENO_DOC_SEARCH_INDEX = {"kind":"search","nodes":[{"id":"namespace_Any","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Any","file":"di/mod.ts","doc":"MetaTypesSometimes we need to use any type or Function type in TypeScript, but it's generally discouraged. However, in the context of dependency injection and dynamic resolution, we often need to work with generic types and dynamic values. Therefore, we define these types here for convenience.","url":"./di/mod.ts/~/Any.html","deprecated":false},{"id":"namespace_Ctr","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Ctr","file":"di/mod.ts","doc":"Constructor type for classes.","url":"./di/mod.ts/~/Ctr.html","deprecated":false},{"id":"namespace_DependsOn","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"DependsOn","file":"di/mod.ts","doc":"Mark an injectable as depending on other tokens. This function can be used to specify dependencies that the injectable requires to function properly. It can be used in the context of an injectable descriptor to define its dependencies.","url":"./di/mod.ts/~/DependsOn.html","deprecated":false},{"id":"namespace_DescriptorFn","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"DescriptorFn","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/DescriptorFn.html","deprecated":false},{"id":"namespace_Factory","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Factory","file":"di/mod.ts","doc":"Factory type for creating instances of a dependency from a token.","url":"./di/mod.ts/~/Factory.html","deprecated":false},{"id":"namespace_Imports","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"Imports","file":"di/mod.ts","doc":"Mark a module as importing other modules. This function can be used to specify other modules that the current module depends on. It can be used in the context of a module descriptor to define its imports.","url":"./di/mod.ts/~/Imports.html","deprecated":false},{"id":"namespace_Injectable","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"Injectable","file":"di/mod.ts","doc":"Mark a class as injectable.This decorator allows the class to be used as a dependency in the dependency injection system. It can be used to define dependencies that the class requires to function properly. The dependencies can be specified using the dependsOn function.","url":"./di/mod.ts/~/Injectable.html","deprecated":false},{"id":"namespace_InjectableDescriptor","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"InjectableDescriptor","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/InjectableDescriptor.html","deprecated":false},{"id":"namespace_InjectableDescriptor","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"InjectableDescriptor.dependencies","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/InjectableDescriptor.dependencies.html","deprecated":false},{"id":"namespace_InjectableMetadata","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"InjectableMetadata","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/InjectableMetadata.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"c","kind":"Class","title":"Class"}],"name":"Injector","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Injector.prototype.resolve","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.prototype.resolve.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Injector.prototype.provider","file":"di/mod.ts","doc":"Get a provider by its token.","url":"./di/mod.ts/~/Injector.prototype.provider.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Injector.prototype.create","file":"di/mod.ts","doc":"Create an instance of a class with its dependencies resolved.","url":"./di/mod.ts/~/Injector.prototype.create.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Injector.prototype.name","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.prototype.name.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Injector.prototype.desc","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.prototype.desc.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Injector.prototype.log","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.prototype.log.html","deprecated":false},{"id":"namespace_Injector","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Injector.prototype.cache","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Injector.prototype.cache.html","deprecated":false},{"id":"namespace_InjectorMetadata","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"InjectorMetadata","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/InjectorMetadata.html","deprecated":false},{"id":"namespace_Instance","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Instance","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Instance.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"MethodContext","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.kind","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.kind.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.name","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.name.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.static","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.static.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.private","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.private.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.metadata","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.metadata.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.addInitializer","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.addInitializer.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.access","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.access.html","deprecated":false},{"id":"namespace_MethodContext","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"MethodContext.access.get","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/MethodContext.access.get.html","deprecated":false},{"id":"namespace_Module","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"Module","file":"di/mod.ts","doc":"Mark a class as a module.This decorator allows the class to be used as a module in the dependency injection system. It can be used to define providers and imports that the module requires. The providers can be specified using the provide function, and imports can be specified using the imports function.","url":"./di/mod.ts/~/Module.html","deprecated":false},{"id":"namespace_ModuleDescriptor","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"ModuleDescriptor","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/ModuleDescriptor.html","deprecated":false},{"id":"namespace_ModuleMetadata","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"ModuleMetadata","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/ModuleMetadata.html","deprecated":false},{"id":"namespace_Provide","kind":[{"char":"f","kind":"Function","title":"Function"},{"char":"f","kind":"Function","title":"Function"},{"char":"f","kind":"Function","title":"Function"}],"name":"Provide","file":"di/mod.ts","doc":"Create a provider for a token. This function can be used to provide a value using a factory function or a class as a dependency. Should be run in creating module context only.","url":"./di/mod.ts/~/Provide.html","deprecated":false},{"id":"namespace_Provider","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Provider","file":"di/mod.ts","doc":"Provider type for defining how to provide a dependency. It includes a token to identify the dependency and a factory function to create the instance. The factory function receives a Resolver to resolve any dependencies needed to create the instance.","url":"./di/mod.ts/~/Provider.html","deprecated":false},{"id":"namespace_Provider","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Provider.provide","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Provider.provide.html","deprecated":false},{"id":"namespace_Provider","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Provider.factory","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Provider.factory.html","deprecated":false},{"id":"namespace_Resolved","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Resolved","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Resolved.html","deprecated":false},{"id":"namespace_Resolved","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Resolved.value","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Resolved.value.html","deprecated":false},{"id":"namespace_Resolved","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Resolved.refCount","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Resolved.refCount.html","deprecated":false},{"id":"namespace_Resolver","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Resolver","file":"di/mod.ts","doc":"Resolver interface for resolving dependencies. It defines a method to resolve a token to its value. Implemented by the Injector class.","url":"./di/mod.ts/~/Resolver.html","deprecated":false},{"id":"namespace_Resolver","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Resolver.resolve","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Resolver.resolve.html","deprecated":false},{"id":"namespace_Target","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Target","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/Target.html","deprecated":false},{"id":"namespace_Token","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Token","file":"di/mod.ts","doc":"Token type for dependency injection. It can be a string, symbol, or a class constructor.","url":"./di/mod.ts/~/Token.html","deprecated":false},{"id":"namespace_getInjectable","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getInjectable","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/getInjectable.html","deprecated":false},{"id":"namespace_getInjector","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getInjector","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/getInjector.html","deprecated":false},{"id":"namespace_getModule","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getModule","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/getModule.html","deprecated":false},{"id":"namespace_setInjectable","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"setInjectable","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/setInjectable.html","deprecated":false},{"id":"namespace_setInjector","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"setInjector","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/setInjector.html","deprecated":false},{"id":"namespace_setModule","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"setModule","file":"di/mod.ts","doc":"","url":"./di/mod.ts/~/setModule.html","deprecated":false},{"id":"namespace_blue","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"blue","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/blue.html","deprecated":false},{"id":"namespace_cyan","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"cyan","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/cyan.html","deprecated":false},{"id":"namespace_debuglog","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"debuglog","file":"utils/mod.ts","doc":"Debug log function factory.","url":"./utils/mod.ts/~/debuglog.html","deprecated":false},{"id":"namespace_gray","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"gray","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/gray.html","deprecated":false},{"id":"namespace_green","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"green","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/green.html","deprecated":false},{"id":"namespace_indexed","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"indexed","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/indexed.html","deprecated":false},{"id":"namespace_magenta","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"magenta","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/magenta.html","deprecated":false},{"id":"namespace_red","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"red","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/red.html","deprecated":false},{"id":"namespace_time","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"time","file":"utils/mod.ts","doc":"Returns the current time as a formatted string \"HH:MM:SS.mmm\".","url":"./utils/mod.ts/~/time.html","deprecated":false},{"id":"namespace_white","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"white","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/white.html","deprecated":false},{"id":"namespace_yellow","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"yellow","file":"utils/mod.ts","doc":"","url":"./utils/mod.ts/~/yellow.html","deprecated":false}]};
})()